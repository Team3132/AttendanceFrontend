/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/": {
    get: operations["AppController_helloWorld"];
  };
  "/auth/status": {
    /** Auth Status */
    get: operations["AuthController_status"];
  };
  "/auth/discord": {
    /** Sign in using discord */
    get: operations["AuthController_discordSignin"];
  };
  "/auth/discord/callback": {
    /** Sign in using discord (callback) */
    get: operations["AuthController_discordSigninCallback"];
  };
  "/user/me": {
    get: operations["UserController_me"];
    delete: operations["UserController_remove"];
    patch: operations["UserController_update"];
  };
  "/user/{id}": {
    get: operations["UserController_findOne"];
  };
  "/event": {
    get: operations["EventController_findAll"];
    post: operations["EventController_create"];
  };
  "/event/{id}": {
    get: operations["EventController_findOne"];
    delete: operations["EventController_remove"];
    patch: operations["EventController_update"];
  };
  "/rsvp": {
    get: operations["RsvpController_findAll"];
    post: operations["RsvpController_create"];
  };
  "/rsvp/{id}": {
    get: operations["RsvpController_findOne"];
    delete: operations["RsvpController_remove"];
    patch: operations["RsvpController_update"];
  };
  "/attendance": {
    get: operations["AttendanceController_findAll"];
    post: operations["AttendanceController_create"];
  };
  "/attendance/{id}": {
    get: operations["AttendanceController_findOne"];
    delete: operations["AttendanceController_remove"];
    patch: operations["AttendanceController_update"];
  };
}

export interface components {
  schemas: {
    AuthStatusDto: {
      isAuthenticated: boolean;
    };
    User: {
      id: string;
      firstName: string | null;
      lastName: string | null;
      /** Format: date-time */
      createdAt: string;
      /** Format: date-time */
      updatedAt: string;
      discordToken: string;
      discordRefreshToken: string;
    };
    UpdateUserDto: {
      firstName?: string;
      lastName?: string;
    };
    CreateEventDto: {
      description?: string;
      title: string;
      /** Format: date-time */
      startDate: string;
      /** Format: date-time */
      endDate: string;
    };
    Event: {
      id: string;
      description: string | null;
      title: string;
      /** Format: date-time */
      startDate: string;
      /** Format: date-time */
      endDate: string;
    };
    UpdateEventDto: {
      description?: string;
      title?: string;
      /** Format: date-time */
      startDate?: string;
      /** Format: date-time */
      endDate?: string;
    };
    CreateRsvpDto: {
      eventId: string;
      /** @enum {string} */
      RSVPStatus: "YES" | "NO" | "MAYBE";
    };
    Rsvp: {
      id: string;
      eventId: string;
      userId: string;
      /** @enum {string} */
      RSVPStatus: "YES" | "NO" | "MAYBE";
      /** Format: date-time */
      createdAt: string;
      /** Format: date-time */
      updatedAt: string;
    };
    UpdateRsvpDto: {
      eventId?: string;
      /** @enum {string} */
      RSVPStatus?: "YES" | "NO" | "MAYBE";
    };
    CreateAttendanceDto: {
      eventId: string;
      userId: string;
      /** @enum {string} */
      AttendanceStatus: "ATTENDED" | "NOT_ATTENDED";
    };
    Attendance: {
      id: string;
      eventId: string;
      userId: string;
      /** @enum {string} */
      AttendanceStatus: "ATTENDED" | "NOT_ATTENDED";
      /** Format: date-time */
      createdAt: string;
      /** Format: date-time */
      updatedAt: string;
    };
    UpdateAttendanceDto: {
      eventId?: string;
      userId?: string;
      /** @enum {string} */
      AttendanceStatus?: "ATTENDED" | "NOT_ATTENDED";
    };
  };
}

export interface operations {
  AppController_helloWorld: {
    parameters: {};
    responses: {
      200: {
        content: {
          "application/json": string;
        };
      };
    };
  };
  /** Auth Status */
  AuthController_status: {
    parameters: {};
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["AuthStatusDto"];
        };
      };
    };
  };
  /** Sign in using discord */
  AuthController_discordSignin: {
    parameters: {};
    responses: {
      200: unknown;
    };
  };
  /** Sign in using discord (callback) */
  AuthController_discordSigninCallback: {
    parameters: {};
    responses: {
      200: {
        content: {
          "application/json": string;
        };
      };
    };
  };
  UserController_me: {
    parameters: {};
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["User"];
        };
      };
    };
  };
  UserController_remove: {
    parameters: {};
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["User"];
        };
      };
    };
  };
  UserController_update: {
    parameters: {};
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["User"];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["UpdateUserDto"];
      };
    };
  };
  UserController_findOne: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["User"];
        };
      };
    };
  };
  EventController_findAll: {
    parameters: {};
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["Event"][];
        };
      };
    };
  };
  EventController_create: {
    parameters: {};
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["Event"];
        };
      };
      201: unknown;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["CreateEventDto"];
      };
    };
  };
  EventController_findOne: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["Event"];
        };
      };
    };
  };
  EventController_remove: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["Event"];
        };
      };
    };
  };
  EventController_update: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["Event"];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["UpdateEventDto"];
      };
    };
  };
  RsvpController_findAll: {
    parameters: {};
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["Rsvp"][];
        };
      };
    };
  };
  RsvpController_create: {
    parameters: {};
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["Rsvp"];
        };
      };
      201: unknown;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["CreateRsvpDto"];
      };
    };
  };
  RsvpController_findOne: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["Rsvp"];
        };
      };
    };
  };
  RsvpController_remove: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["Rsvp"];
        };
      };
    };
  };
  RsvpController_update: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["Rsvp"];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["UpdateRsvpDto"];
      };
    };
  };
  AttendanceController_findAll: {
    parameters: {};
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["Attendance"][];
        };
      };
    };
  };
  AttendanceController_create: {
    parameters: {};
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["Attendance"];
        };
      };
      201: unknown;
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["CreateAttendanceDto"];
      };
    };
  };
  AttendanceController_findOne: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["Attendance"];
        };
      };
    };
  };
  AttendanceController_remove: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["Attendance"];
        };
      };
    };
  };
  AttendanceController_update: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["Attendance"];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["UpdateAttendanceDto"];
      };
    };
  };
}

export interface external {}
